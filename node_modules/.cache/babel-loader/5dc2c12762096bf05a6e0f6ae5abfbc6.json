{"ast":null,"code":"import _slicedToArray from\"/home/fillipecorreia/Desktop/Pokedex/Vaughan-pokedex7/pokedex/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/home/fillipecorreia/Desktop/Pokedex/Vaughan-pokedex7/pokedex/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import React,{useEffect,useState}from\"react\";import{useParams}from\"react-router-dom\";import styled from\"styled-components\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Root=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  margin: 40px;\\n  gap: 50px;\\n  justify-content: center;\\n\"])));var DivDoMeio=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  gap: 50px;\\n  align-items: center;\\n\"])));var PokemonDetails=function PokemonDetails(){var _useParams=useParams(),id=_useParams.id;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),pokemons=_useState2[0],setPokemons=_useState2[1];useEffect(function(){axios.get(\"https://pokeapi.co/api/v2/pokemon/\".concat(id)).then(function(res){setPokemons([res.data]);}).catch(function(err){console.log(err);});},[]);var backgroundType=function backgroundType(type){switch(type){case\"normal\":return\"lightblue\";case\"fighting\":return\"red\";case\"flying\":return\"lightblue\";case\"poison\":return\"purple\";case\"ground\":return\"brown\";case\"rock\":return\"brown\";case\"bug\":return\"green\";case\"ghost\":return\"purple\";case\"steel\":return\"grey\";case\"fire\":return\"red\";case\"water\":return\"blue\";case\"grass\":return\"green\";case\"electric\":return\"yellow\";case\"psychic\":return\"pink\";case\"ice\":return\"lightblue\";case\"dragon\":return\"purple\";case\"dark\":return\"purple\";case\"fairy\":return\"pink\";default:return\"black\";}};var pokemap=pokemons.map(function(poke){return/*#__PURE__*/_jsxs(Root,{children:[/*#__PURE__*/_jsxs(\"div\",{class:\"nes-container is-rounded\",style:{backgroundColor:backgroundType(poke.types[0].type.name),color:\"white\",display:\"flex\",flexDirection:\"column\",gap:\"10px\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Status:\"}),/*#__PURE__*/_jsxs(\"b\",{class:\"nes-text is-normal\",children:[\"HP:\",poke.stats[0].base_stat]}),/*#__PURE__*/_jsx(\"progress\",{class:\"\",value:poke.stats[0].base_stat,max:\"100\"}),/*#__PURE__*/_jsxs(\"b\",{class:\"nes-text is-normal\",children:[\"Attack:\",poke.stats[1].base_stat]}),/*#__PURE__*/_jsx(\"progress\",{class:\"\",value:poke.stats[1].base_stat,max:\"100\"}),/*#__PURE__*/_jsxs(\"b\",{class:\"nes-text is-normal\",children:[\"Defense:\",poke.stats[2].base_stat]}),/*#__PURE__*/_jsx(\"progress\",{class:\"\",value:poke.stats[2].base_stat,max:\"100\"}),/*#__PURE__*/_jsxs(\"b\",{class:\"nes-text is-normal\",children:[\"Special-attack:\",poke.stats[3].base_stat]}),/*#__PURE__*/_jsx(\"progress\",{class:\"\",value:poke.stats[3].base_stat,max:\"100\"}),/*#__PURE__*/_jsxs(\"b\",{class:\"nes-text is-normal\",children:[\"Special-defense:\",poke.stats[4].base_stat]}),/*#__PURE__*/_jsx(\"progress\",{class:\"\",value:poke.stats[4].base_stat,max:\"100\"}),/*#__PURE__*/_jsxs(\"b\",{class:\"nes-text is-normal\",children:[\"Speed:\",poke.stats[5].base_stat]}),/*#__PURE__*/_jsx(\"progress\",{class:\"\",value:poke.stats[5].base_stat,max:\"100\"})]},poke.name),/*#__PURE__*/_jsxs(DivDoMeio,{children:[/*#__PURE__*/_jsxs(\"div\",{class:\"nes-container is-rounded\",style:{backgroundColor:backgroundType(poke.types[0].type.name),color:\"white\"},children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"N\\xFAmero de tipos: \",poke.types.length]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Tipo 1: \",poke.types[0].type.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Tipo 2: \",poke.types[1]?poke.types[1].type.name:\"N/A\"]})]},poke.name),/*#__PURE__*/_jsxs(\"div\",{class:\"nes-container is-rounded\",style:{backgroundColor:backgroundType(poke.types[0].type.name),color:\"white\"},children:[/*#__PURE__*/_jsx(\"img\",{height:\"200px\",src:poke.sprites.front_default}),/*#__PURE__*/_jsx(\"img\",{height:\"200px\",src:poke.sprites.back_default})]},poke.name)]}),/*#__PURE__*/_jsxs(\"div\",{class:\"nes-container is-rounded\",style:{backgroundColor:backgroundType(poke.types[0].type.name),color:\"white\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Movimentos:\"}),/*#__PURE__*/_jsx(\"p\",{children:poke.moves[0].move.name}),/*#__PURE__*/_jsx(\"p\",{children:poke.moves[1]?poke.moves[1].move.name:\"N/A\"}),/*#__PURE__*/_jsx(\"p\",{children:poke.moves[2]?poke.moves[2].move.name:\"N/A\"}),/*#__PURE__*/_jsx(\"p\",{children:poke.moves[3]?poke.moves[3].move.name:\"N/A\"}),/*#__PURE__*/_jsx(\"p\",{children:poke.moves[4]?poke.moves[4].move.name:\"N/A\"})]},poke.name)]});});return console.log(\"Pokemons: \",pokemons),/*#__PURE__*/_jsx(_Fragment,{children:pokemap});};export default PokemonDetails;","map":{"version":3,"sources":["/home/fillipecorreia/Desktop/Pokedex/Vaughan-pokedex7/pokedex/src/components/PokemonDetails/PokemonDetails.js"],"names":["React","useEffect","useState","useParams","styled","axios","Root","div","DivDoMeio","PokemonDetails","id","pokemons","setPokemons","get","then","res","data","catch","err","console","log","backgroundType","type","pokemap","map","poke","backgroundColor","types","name","color","display","flexDirection","gap","stats","base_stat","length","sprites","front_default","back_default","moves","move"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 40px;\n  gap: 50px;\n  justify-content: center;\n`;\n\nconst DivDoMeio = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  align-items: center;\n`;\n\nconst PokemonDetails = () => {\n  const { id } = useParams();\n  const [pokemons, setPokemons] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`https://pokeapi.co/api/v2/pokemon/${id}`)\n      .then((res) => {\n        setPokemons([res.data]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const backgroundType = (type) => {\n    switch (type) {\n      case \"normal\":\n        return \"lightblue\";\n      case \"fighting\":\n        return \"red\";\n      case \"flying\":\n        return \"lightblue\";\n      case \"poison\":\n        return \"purple\";\n      case \"ground\":\n        return \"brown\";\n      case \"rock\":\n        return \"brown\";\n      case \"bug\":\n        return \"green\";\n      case \"ghost\":\n        return \"purple\";\n      case \"steel\":\n        return \"grey\";\n      case \"fire\":\n        return \"red\";\n      case \"water\":\n        return \"blue\";\n      case \"grass\":\n        return \"green\";\n      case \"electric\":\n        return \"yellow\";\n      case \"psychic\":\n        return \"pink\";\n      case \"ice\":\n        return \"lightblue\";\n      case \"dragon\":\n        return \"purple\";\n      case \"dark\":\n        return \"purple\";\n      case \"fairy\":\n        return \"pink\";\n      default:\n        return \"black\";\n    }\n  };\n\n  const pokemap = pokemons.map((poke) => (\n    <Root>\n      <div\n        class=\"nes-container is-rounded\"\n        key={poke.name}\n        style={{\n          backgroundColor: backgroundType(poke.types[0].type.name),\n          color: \"white\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"10px\",\n        }}\n      >\n        <h3>Status:</h3>\n\n        <b class=\"nes-text is-normal\">HP:{poke.stats[0].base_stat}</b>\n\n        <progress class=\"\" value={poke.stats[0].base_stat} max=\"100\"></progress>\n\n        <b class=\"nes-text is-normal\">Attack:{poke.stats[1].base_stat}</b>\n        <progress class=\"\" value={poke.stats[1].base_stat} max=\"100\"></progress>\n\n        <b class=\"nes-text is-normal\">Defense:{poke.stats[2].base_stat}</b>\n        <progress class=\"\" value={poke.stats[2].base_stat} max=\"100\"></progress>\n\n        <b class=\"nes-text is-normal\">\n          Special-attack:{poke.stats[3].base_stat}\n        </b>\n\n        <progress class=\"\" value={poke.stats[3].base_stat} max=\"100\"></progress>\n\n        <b class=\"nes-text is-normal\">\n          Special-defense:{poke.stats[4].base_stat}\n        </b>\n\n        <progress class=\"\" value={poke.stats[4].base_stat} max=\"100\"></progress>\n\n        <b class=\"nes-text is-normal\">Speed:{poke.stats[5].base_stat}</b>\n        <progress class=\"\" value={poke.stats[5].base_stat} max=\"100\"></progress>\n      </div>\n\n      <DivDoMeio>\n        <div\n          class=\"nes-container is-rounded\"\n          key={poke.name}\n          style={{\n            backgroundColor: backgroundType(poke.types[0].type.name),\n            color: \"white\",\n          }}\n        >\n          <p>Número de tipos: {poke.types.length}</p>\n\n          <p>Tipo 1: {poke.types[0].type.name}</p>\n          <p>Tipo 2: {poke.types[1] ? poke.types[1].type.name : \"N/A\"}</p>\n        </div>\n        <div\n          class=\"nes-container is-rounded\"\n          key={poke.name}\n          style={{\n            backgroundColor: backgroundType(poke.types[0].type.name),\n            color: \"white\",\n          }}\n        >\n          <img height=\"200px\" src={poke.sprites.front_default} />\n          <img height=\"200px\" src={poke.sprites.back_default} />\n        </div>\n      </DivDoMeio>\n      <div\n        class=\"nes-container is-rounded\"\n        key={poke.name}\n        style={{\n          backgroundColor: backgroundType(poke.types[0].type.name),\n          color: \"white\",\n        }}\n      >\n        <h3>Movimentos:</h3>\n        <p>{poke.moves[0].move.name}</p>\n        <p>{poke.moves[1] ? poke.moves[1].move.name : \"N/A\"}</p>\n        <p>{poke.moves[2] ? poke.moves[2].move.name : \"N/A\"}</p>\n        <p>{poke.moves[3] ? poke.moves[3].move.name : \"N/A\"}</p>\n        <p>{poke.moves[4] ? poke.moves[4].move.name : \"N/A\"}</p>\n      </div>\n    </Root>\n  ));\n\n  return console.log(\"Pokemons: \", pokemons), (<>{pokemap}</>);\n};\nexport default PokemonDetails;\n"]},"metadata":{},"sourceType":"module"}